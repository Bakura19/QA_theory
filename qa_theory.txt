1.	Что подразумевается под тестовой средой?
Среда в которой работают тестировщики, в которой устанавливаются поставки ПО, которые выдают разработчики. Здесь тестировщики проверяют функционал, проводят регрессионные проверки, воспроизводят ошибки.
2. В чем отличие build от release?
Билд – это промежуточная версия программного средства. Релиз является окончательной версией программного средства
3. Основные фазы тестирования?
Pre-Alpha: прототип, в котором всё ещё присутствует много ошибок и наверняка неполный функционал. Необходим для ознакомления с будущими возможностями программ.
Alpha: является ранней версией программного продукта, тестирование которой проводится внутри фирмы-разработчика независимой командой тестировщиков.
Beta: практически готовый продукт, который разработан в первую очередь для тестирования конечными пользователями.
Release Candidate (RC): возможные ошибки в каждой из фичей уже устранены и разработчики выпускают версию на которой проводится регрессионное тестирование.
Release: финальная версия программы, которая готова к использованию.
4. Что такое импакт анализ?
Импакт анализ - это исследование, которое позволяет указать затронутые места в проекте при разработке новой или изменении старой функциональности, а также определить, насколько значительно они были затронуты.
Импакт анализ может быть полезным в следующих случаях:
-есть изменения в требованиях;
-получен запрос на внесение изменений в продукт;
-ожидается внедрение нового модуля или функциональности в -существующий продукт;
-каждый раз, когда есть изменения в существующих модулях или функциональностях продукта.
5. Критерии выбора тестов?
 -достаточность, т. е. критерий должен показывать, когда некоторое конечное множество тестов достаточно для тестирования данной программы;
 -полнота, т. е. в случае ошибки должен существовать тест из множества тестов, удовлетворяющих критерию, который раскрывает ошибку;
 -надежность, т. е. любые два множества тестов, удовлетворяющих ему, одновременно должны раскрывать или не раскрывать ошибки программы;
 -проверяемость, т. е. критерий должен быть легко проверяемым, например, вычисляемым на тестах.
6. Принципы тестирования
Принцип 1 — Тестирование демонстрирует наличие дефектов.
Тестирование только снижает вероятность наличия дефектов, которые находятся в программном обеспечении, но не гарантирует их отсутствия.
Принцип 2 — Исчерпывающее тестирование невозможно.
Полное тестирование с использованием всех входных комбинаций данных, результатов и предусловий физически невыполнимо (исключение — тривиальные случаи).
Принцип 3 — Раннее тестирование.
Следует начинать тестирование на ранних стадиях жизненного цикла разработки ПО, чтобы найти дефекты как можно раньше.
Принцип 4 — Скопление дефектов.
Большая часть дефектов находится в ограниченном количестве модулей.
Принцип 5 — Парадокс пестицида.
Если повторять те же тестовые сценарии снова и снова, в какой-то момент этот набор тестов перестанет выявлять новые дефекты.
Принцип 6 — Тестирование зависит от контекста. 
Тестирование проводится по-разному в зависимости от контекста. Например, программное обеспечение, в котором критически важна безопасность, тестируется иначе, чем новостной портал.
Принцип 7 — Заблуждение об отсутствии ошибок. 
Отсутствие найденных дефектов при тестировании не всегда означает готовность продукта к релизу. Система должна быть удобна пользователю в использовании и удовлетворять его ожиданиям и потребностям. 
